name: .NET
on:
  push:
    branches: [ master,prerelease ]
  workflow_dispatch:
    
jobs:
  build:

    runs-on: windows-latest
    
    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true

    steps:  
    - uses: actions/checkout@v2
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 3.1.*
    - name: Cache VSIX
      id: cache-vsix
      uses: actions/cache@v2
      with:
        path: ALLanguage.vsix
        key: vsix-19.1.31886.32949
    - name: Download platform artifact
      if: steps.cache-vsix.outputs.cache-hit != 'true'
      run: Invoke-WebRequest https://bcartifacts.blob.core.windows.net/sandbox/19.1.31886.32949/platform -OutFile platform.zip
    - name: Unzip platform
      if: steps.cache-vsix.outputs.cache-hit != 'true'
      run: 7z x platform.zip *.vsix -r
    - name: copy vsix
      if: steps.cache-vsix.outputs.cache-hit != 'true'
      run: cp "ModernDev\program files\Microsoft Dynamics NAV\190\AL Development Environment\ALLanguage.vsix" "./ALLanguage.vsix"
    - name: Unzip vsix
      run: 7z x "ALLanguage.vsix" "-oms-dynamics-smb.al-latest" extension\bin\Analyzers -r
    - name: Release
      id: create_release
      uses: release-drafter/release-drafter@v5
      with:
        prerelease: ${{ github.ref != 'refs/heads/master' }}
        commitish: ${{ github.ref }}
        disable-autolabeler: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Set current version
      run: (Get-Content AssemblyInfo.cs) -replace 'Version\("([\d\.]+)"\)]', ("Version(""" + ('${{ steps.create_release.outputs.tag_name }}' -replace "v","") + """)]") |  Out-File AssemblyInfo.cs
    - name: Build
      run: dotnet build --no-restore
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v2.2.4
      with:
        name: BusinessCentral.LinterCop.dll
        path: bin\Debug\BusinessCentral.LinterCop.dll
    - name: Remove a Release Asset
      uses: flcdrg/remove-release-asset-action@v1.0.13
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        release_id: ${{ steps.create_release.outputs.id }} 
        asset_name: BusinessCentral.LinterCop.dll
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} 
        asset_path: bin\Debug\BusinessCentral.LinterCop.dll
        asset_name: BusinessCentral.LinterCop.dll
        asset_content_type: application/octet-stream
