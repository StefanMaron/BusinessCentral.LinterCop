name: Marketplace
description: Get AL Language versions from the Visual Studio Marketplace

outputs:
  sources:
    description: Stringified JSON object with VSIXPackages of the AL Language versions
    value: ${{ steps.get-marketplace.outputs.sources }}
  al-version-latest:
    description: Version number of the Latest version
    value: ${{ steps.get-marketplace.outputs.latest }}
  al-version-prerelease:
    description: Version number of the Pre-Release version
    value: ${{ steps.get-marketplace.outputs.prerelease }}

runs:
  using: composite
  steps:
    - name: Get-Marketplace
      id: get-marketplace
      shell: pwsh
      run: |
        $marketplace = ${{github.action_path}}/Get-Marketplace.ps1 | ConvertFrom-Json

        $versionLatest = $marketplace `
         | Where-Object properties -ne $null `
         | Where-Object { $_.properties.key -notcontains 'Microsoft.VisualStudio.Code.PreRelease' } | Select-Object -First 1 -ExpandProperty version
        echo "latest=$($versionLatest)" >> $env:GITHUB_OUTPUT

        $versionPreRelease = $marketplace `
         | Where-Object properties -ne $null `
         | Where-Object { $_.properties.key -contains 'Microsoft.VisualStudio.Code.PreRelease' } | Select-Object -First 1 -ExpandProperty version
        echo "prerelease=$($versionPreRelease)" >> $env:GITHUB_OUTPUT

        # Populate list of sources
        $sources = foreach ($item in $marketplace) {
            $VSIXPackage = $item.files | Where-Object { $_.assetType -eq "Microsoft.VisualStudio.Services.VSIXPackage" }
            if ($VSIXPackage) {
                [PSCustomObject]@{
                    version = $item.version
                    source  = $VSIXPackage.source
                    type    = 'VSIXPackage'
                }
            }
        }

        # Add NuGet packages to list of sources
        $nupkgs = ${{github.action_path}}/Get-NuGet-Packages | ConvertFrom-Json
        $sources += $nupkgs

        echo "sources=$($sources | ConvertTo-Json -Compress)" >> $env:GITHUB_OUTPUT
