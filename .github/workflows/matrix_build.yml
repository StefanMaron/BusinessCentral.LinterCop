name: Initialization
on:
  push:
    branches:
      - master
      - prerelease
  workflow_dispatch: null
jobs:
  setup-matrix:
    runs-on: ubuntu-latest
    steps:
      - name: Get AL Language versions
        id: setup-matrix-combinations
        shell: pwsh
        run: |
          $listing = Invoke-WebRequest -Method POST -UseBasicParsing `
              -Uri https://marketplace.visualstudio.com/_apis/public/gallery/extensionquery?api-version=3.0-preview.1 `
              -Body '{"filters":[{"criteria":[{"filterType":8,"value":"Microsoft.VisualStudio.Code"},{"filterType":12,"value":"4096"},{"filterType":7,"value":"ms-dynamics-smb.al"}],"pageNumber":1,"pageSize":50,"sortBy":0,"sortOrder":0}],"assetTypes":[],"flags":0x192}' `
              -ContentType application/json | ConvertFrom-Json

          $results = $listing.results | Select-Object -First 1 -ExpandProperty extensions `
          | Select-Object -ExpandProperty versions `
          | Where-Object { [System.Version]('{0}.{1}.{2}.0' -f $_.version.split('.')) -gt [System.Version]"14.0.963280.0" }

          $matrix = @()
          foreach ($result in $results) {
              $assetName = "BusinessCentral.LinterCop.$($result.version).dll"
              $assetUri = $result | Select-Object -ExpandProperty files | Where-Object { $_.assetType -eq "Microsoft.VisualStudio.Services.VSIXPackage" } | Select-Object -ExpandProperty source
              $matrix += [Ordered]@{version = $result.version; assetname = $assetName; assetUri = $assetUri }
          }
          $MATRIX_COMBINATIONS = @{'include' = $matrix } | ConvertTo-Json -Compress
          Write-Host "::set-output name=matrix-combinations::$($MATRIX_COMBINATIONS)"

          # TODO: Resolve set-output warning from line above 
          #Write-Host "matrix-combinations=$($MATRIX_COMBINATIONS)" >> $GITHUB_OUTPUT

    outputs:
      matrix-combinations: ${{ steps.setup-matrix-combinations.outputs.matrix-combinations }}

  matrix-job:
    runs-on: windows-latest
    needs: setup-matrix
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix-combinations) }}
    env:
      DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
    steps:
      - uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 8.0.*

      - name: Restore dependencies
        run: dotnet restore

      - name: Download platform artifact
        run: Invoke-WebRequest ${{ matrix.assetUri }} -OutFile ALLanguage.vsix

      - name: Unzip vsix
        run: 7z x "ALLanguage.vsix" "-oms-dynamics-smb.al-latest"
          extension\bin\Analyzers -r

      - name: Release
        id: create-release
        uses: release-drafter/release-drafter@v5
        with:
          prerelease: ${{ github.ref != 'refs/heads/master' }}
          commitish: ${{ github.ref }}
          disable-autolabeler: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set current version
        run: (Get-Content AssemblyInfo.cs) -replace 'Version\("([\d\.]+)"\)]',
          ("Version(""" + ('${{ steps.create-release.outputs.tag_name }}'
          -replace "v","") + """)]") |  Out-File AssemblyInfo.cs

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: bin/Release/netstandard2.1/BusinessCentral.LinterCop.dll
          asset_name: ${{ matrix.assetName }}
